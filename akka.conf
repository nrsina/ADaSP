LocalConfig {
  pinned-dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    mailbox-requirement = "info.nourian.Queue.OperatorQueueSemantics"
    throughput = 1
  }
  akka.actor.mailbox.requirements {
    "info.nourian.Queue.OperatorQueueSemantics" = operator-dispatcher-mailbox
  }
  operator-dispatcher-mailbox {
    mailbox-type = "info.nourian.Queue.OperatorMailbox"
  }
  akka {
    actor {
      serialize-messages = on
      serialize-creators = on
      allow-java-serialization = off
      serializers {
        kryo = "com.twitter.chill.akka.AkkaSerializer"
      }
      serialization-bindings {
        "java.io.Serializable" = kryo
        "info.nourian.Data.Tuple" = kryo
        "info.nourian.Entities.Control" = kryo
        "info.nourian.Entities.Pane" = kryo
      }
    }
  }
}

DeployConfigUDP {
  pinned-dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    mailbox-requirement = "info.nourian.Queue.OperatorQueueSemantics"
    throughput = 1
  }
  akka.actor.mailbox.requirements {
    "info.nourian.Queue.OperatorQueueSemantics" = operator-dispatcher-mailbox
  }
  operator-dispatcher-mailbox {
    mailbox-type = "info.nourian.Queue.OperatorMailbox"
  }
  akka {
    actor {
      provider = remote
      allow-java-serialization = off
      serializers {
        kryo = "com.twitter.chill.akka.AkkaSerializer"
      }
      serialization-bindings {
        "java.io.Serializable" = kryo
        "info.nourian.Data.Tuple" = kryo
        "info.nourian.Entities.Control" = kryo
        "info.nourian.Entities.Pane" = kryo
      }
    }
    remote {
      artery {
        enabled = on
        transport = aeron-udp
        canonical.hostname = "127.0.0.1"
        canonical.port = 25520
      }
    }
  }
}

DeployConfigTCP {
  pinned-dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    mailbox-requirement = "info.nourian.Queue.OperatorQueueSemantics"
    throughput = 1
  }
  akka.actor.mailbox.requirements {
    "info.nourian.Queue.OperatorQueueSemantics" = operator-dispatcher-mailbox
  }
  operator-dispatcher-mailbox {
    mailbox-type = "info.nourian.Queue.OperatorMailbox"
  }
  akka {
    actor {
      provider = remote
      allow-java-serialization = off
      serializers {
        kryo = "com.twitter.chill.akka.AkkaSerializer"
      }
      serialization-bindings {
        "java.io.Serializable" = kryo
        "info.nourian.Data.Tuple" = kryo
        "info.nourian.Entities.Control" = kryo
        "info.nourian.Entities.Pane" = kryo
      }
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 25520
      }
    }
  }
}